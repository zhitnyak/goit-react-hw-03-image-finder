{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/apiImg.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","trim","className","css","SearchForm","this","SearchFormInput","type","autoComplete","autoFocus","placeholder","onChange","SearchFormButton","SearchFormButtonLabel","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","modalOpen","onClick","src","alt","ImageGalleryItemImage","Modal","cleanEventListener","code","window","addEventListener","removeEventListener","Overlay","api","fetchImg","pages","fetch","then","response","console","log","ok","json","Promise","reject","Error","ImageGallery","status","loadMore","page","searchbar","images","prevState","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","moduleUrl","moduleAlt","modalClose","prevProps","prevSearch","nextSearch","total","map","image","id","App","habdleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cf77e04.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport css from \"../../App.css\";\n\nclass Searchbar extends Component {\n  state = { searchQuery: \"\" };\n\n  handleInputChange = (e) => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchQuery.trim());\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    return (\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={this.handleSubmit}>\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputChange}\n            value={this.state.searchQuery}\n          />\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\r\nimport css from \"../../App.css\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tags, modalOpen }) => {\r\n  return (\r\n    <li\r\n      className={css.ImageGalleryItem}\r\n      onClick={() => {\r\n        modalOpen(largeImageURL, tags);\r\n      }}\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={css.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  modalOpen: PropTypes.func,\r\n  tags: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport css from \"../../App.css\";\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    largeImageURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.cleanEventListener);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.cleanEventListener);\r\n  }\r\n\r\n  cleanEventListener = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n  render() {\r\n    const { onClick, largeImageURL, alt } = this.props;\r\n    return (\r\n      <div className={css.Overlay} onClick={onClick}>\r\n        <div className={css.Modal}>\r\n          <img src={largeImageURL} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n};\r\n","const API_KEY = \"22603097-01ea7c9e46d89c9af2e821f90\";\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\n\r\nfunction fetchImg(searchQuery, pages) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${searchQuery}&page=${pages}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    console.log(response);\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`No images on request &{searchQuery}`));\r\n  });\r\n}\r\n\r\nconst api = { fetchImg };\r\n\r\nexport default api;\r\n","import css from \"../../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport Button from \"../Button/Button\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nimport api from \"../apiImg\";\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    status: \"idle\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevSearch = prevProps.searchbar;\r\n    const nextSearch = this.props.searchbar;\r\n    const page = 1;\r\n    if (prevSearch !== nextSearch) {\r\n      this.setState({ status: \"pending\", page: 1 });\r\n\r\n      api\r\n        .fetchImg(nextSearch, page)\r\n        .then((images) => {\r\n          console.log(images);\r\n          if (images.total === 0) {\r\n            this.setState({ error: \"No any picture\", status: \"rejected\" });\r\n          } else {\r\n            this.setState({\r\n              images: images.hits,\r\n              status: \"resolved\",\r\n              page: 1,\r\n              searchbar: nextSearch,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\r\n    }\r\n  }\r\n  loadMore = () => {\r\n    const page = this.state.page + 1;\r\n\r\n    api\r\n      .fetchImg(this.state.searchbar, page)\r\n      .then((images) =>\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images.hits],\r\n          page: prevState.page + 1,\r\n        }))\r\n      )\r\n      .then(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      })\r\n      .catch((error) => this.setState({ error }));\r\n  };\r\n  modalOpen = (moduleUrl, moduleAlt) => {\r\n    this.setState({\r\n      largeImageURL: moduleUrl,\r\n      alt: moduleAlt,\r\n    });\r\n  };\r\n  modalClose = () => {\r\n    this.setState({ largeImageURL: \"\", alt: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { images, status } = this.state;\r\n    if (status === \"idle\") {\r\n      return <p></p>;\r\n    }\r\n    if (status === \"pending\") {\r\n      return <Loader />;\r\n    }\r\n    if (status === \"resolved\") {\r\n      return (\r\n        <ul className={css.ImageGallery}>\r\n          {images.map((image) => {\r\n            return (\r\n              <ImageGalleryItem\r\n                key={image.id}\r\n                tags={image.tags}\r\n                webformatURL={image.webformatURL}\r\n                largeImageURL={image.largeImageURL}\r\n                modalOpen={this.modalOpen}\r\n              />\r\n            );\r\n          })}\r\n          <Button onClick={this.loadMore} />\r\n          {this.state.largeImageURL && (\r\n            <Modal\r\n              largeImageURL={this.state.largeImageURL}\r\n              alt={this.state.alt}\r\n              onClick={this.modalClose}\r\n            />\r\n          )}\r\n        </ul>\r\n      );\r\n    }\r\n    if (status === \"rejected\") {\r\n      return <p>{this.state.error}</p>;\r\n    }\r\n  }\r\n}\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    searchQuery: \"null\",\r\n  };\r\n\r\n  habdleFormSubmit = (searchQuery) => {\r\n    this.setState({ searchQuery });\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.habdleFormSubmit} />\r\n        <ImageGallery searchQuery={searchQuery} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}